# For KAMP
[firmware_retraction]
retract_length: 0.6
retract_speed: 40
unretract_speed: 40

[idle_timeout]
gcode:
  {% if printer.pause_resume.is_paused %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=True
    {action_respond_info("Idle Timeout: Extruder powered down")}
    M104 S0   ; Set Hot-end to 0C (off)
  {% else %}
    {action_respond_info("Idle Timeout: Stepper and Heater powered down")}
    TURN_OFF_HEATERS
    M84
  {% endif %}

# Mainsail macros config
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos: True
variable_custom_park_x: 110
variable_custom_park_y: 220
variable_custom_park_dz: 30
variable_speed_retract:   40.0
variable_speed_unretract: 40.0
variable_park_at_cancel: True
variable_park_at_cancel_x: 110
variable_park_at_cancel_y: 220
variable_runout_sensor: "filament_switch_sensor filament_sensor"
gcode:

[gcode_macro RESTORE_TRAVEL_SPEED]
gcode:
    {% set velocity = printer.configfile.settings['printer'].max_velocity %}
    {% set accel = printer.configfile.settings['printer'].max_accel %}
    {% set square_corner_velocity = printer.configfile.settings['printer'].square_corner_velocity %}
    {% set minimum_cruise_ratio = printer.configfile.settings['printer'].minimum_cruise_ratio %}
    
    SET_VELOCITY_LIMIT VELOCITY={velocity} ACCEL={accel} SQUARE_CORNER_VELOCITY={square_corner_velocity} MINIMUM_CRUISE_RATIO={minimum_cruise_ratio}

[gcode_macro M600]
description: Filament change
gcode:
  M117 Unloading filament
  PAUSE X=220 Y=0 Z_MIN=20
  SAVE_GCODE_STATE NAME=STATE_M600
  _filament_extract
  RESTORE_GCODE_STATE NAME=STATE_M600

[gcode_macro START_PRINT]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED_TEMP|int %}
  {% set target_extruder = params.EXTRUDER_TEMP|int %}
  {% set target_chamber = [params.CHAMBER|default("0")|int, 45]|max %}
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2 %}

  # Restore travel speed
  RESTORE_TRAVEL_SPEED

  # Cancel nevermore delay and turn it off
  UPDATE_DELAYED_GCODE ID=FILTER_OFF DURATION=0
  SET_FAN_SPEED FAN=nevermore SPEED=0

  CLEAR_PAUSE
  BED_MESH_CLEAR

  CX_ROUGH_G28 EXTRUDER_TEMP={target_extruder} BED_TEMP={target_bed}
  
  {% if target_bed > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    M190 S{target_bed}                                  # Set the target temp for the bed

    SET_FAN_SPEED FAN=nevermore SPEED=1                 # Turn on nevermore
    
    SET_DISPLAY_TEXT MSG="Soak for 10 min"              # Display info on display
    G4 P600000                                          # Wait 10 min for the bedtemp to stabilize  
  {% endif %}  
  
  G90                                                   # Absolute position
  CX_NOZZLE_CLEAR

  SET_DISPLAY_TEXT MSG="Leveling"
  ACCURATE_HOME_Z

  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  BED_MESH_CALIBRATE                                   # Start the bed mesh

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
    
  G1 X86.65 Y223.2 Z10 F9000                                       # Go to wipe
  G1 Z4.8              F9000                                       # Go to wipe
  M400
  
  M190 S{target_bed}                                  # Set the target temp for the bed
  M109 S{target_extruder}                               # Heat the hotend to set temp

  G1 Z10               F9000                                       # Safe Z
  M400

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printing"                       # Display info on display
  LINE_PURGE
  SET_PRESSURE_ADVANCE ADVANCE=0.035
  G90                                                   # Absolute position  

[gcode_macro END_PRINT]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           # wait for buffer to clear
    G92 E0                         # zero the extruder
    G1 E-3.0 F3600                 # retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      # absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  # move nozzle to remove stringing
    G0 X{th.axis_maximum.x / 2} Y{th.axis_maximum.y} F3600  # park nozzle at rear
    M107                                     # turn off fans
    
    BED_MESH_CLEAR
   
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

    UPDATE_DELAYED_GCODE ID=FILTER_OFF DURATION=180

    RESTORE_TRAVEL_SPEED
    M18 # Turn off motors

    SET_DISPLAY_TEXT MSG=""

[delayed_gcode FILTER_OFF]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0
